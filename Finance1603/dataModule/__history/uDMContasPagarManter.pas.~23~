unit uDMContasPagarManter;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Forms, udmConexao;

type
  TdmContasPagarManter = class(TDataModule)
    qryDeletaExcluidos: TFDQuery;
    qryAlteraNumDoc: TFDQuery;
  private
    { Private declarations }
    procedure inicializarDM(Sender: TObject);
  public
    { Public declarations }

    function deletarTitulosPorTipoStatus(pidOrganizacao,
      status: String): Boolean;

      function alterarNumDocTP(pidOrganizacao,
      pId, numero: String): Boolean;


  end;

var
  dmContasPagarManter: TdmContasPagarManter;

implementation

{ %CLASSGROUP 'Vcl.Controls.TControl' }

{$R *.dfm}
{ TdmContasPagarManter }

//alterar numero do documento


function TdmContasPagarManter.alterarNumDocTP(pidOrganizacao,
      pId, numero: String): Boolean;
begin
  try
    if not qryAlteraNumDoc.Connection.Connected then
    begin
      qryAlteraNumDoc.Connection := dmConexao.Conn;
    end;
  Except
    raise Exception.Create
      ('Problemas ao tentar conectar com base. Erro : ALTNUMDOCTP-1');
  end;

  qryAlteraNumDoc.Close;
  qryAlteraNumDoc.Connection := dmConexao.Conn;
  qryAlteraNumDoc.ParamByName('PID').AsString := pId;
  qryAlteraNumDoc.ParamByName('PIDORGANIZACAO').AsString := pidOrganizacao;

  qryAlteraNumDoc.SQL.SaveToFile(ExtractFilePath(Application.ExeName) + 'ALTNUMDOCTP.log');



  try
    qryAlteraNumDoc.ExecSQL;
  Except
    raise Exception.Create
      ('Problemas ao tentar deletar registros. Erro : ALTNUMDOCTP-2');
  end;

  dmConexao.Conn.Commit;

   Result := System.True;

end;



//deletar todos os TP

function TdmContasPagarManter.deletarTitulosPorTipoStatus(pidOrganizacao,
  status: String): Boolean;
begin
  try
    if not qryDeletaExcluidos.Connection.Connected then
    begin
      qryDeletaExcluidos.Connection := dmConexao.Conn;
    end;
  Except
    raise Exception.Create
      ('Problemas ao tentar conectar com base. Erro : DELTP-1');
  end;

  qryDeletaExcluidos.Close;
  qryDeletaExcluidos.Connection := dmConexao.Conn;
  qryDeletaExcluidos.ParamByName('PIDSTATUS').AsString := status;
  qryDeletaExcluidos.ParamByName('PIDORGANIZACAO').AsString := pidOrganizacao;

   qryDeletaExcluidos.SQL.SaveToFile(ExtractFilePath(Application.ExeName) + 'delTP.log');

  try
    qryDeletaExcluidos.ExecSQL;
  Except
    raise Exception.Create
      ('Problemas ao tentar deletar registros. Erro : DELTP-2');
  end;

  dmConexao.Conn.Commit;

   Result := System.True;

end;

procedure TdmContasPagarManter.inicializarDM(Sender: TObject);
begin
  if not(Assigned(dmConexao)) then
  begin
    dmConexao := TdmConexao.Create(Self);
  end
  else
  begin
    dmConexao.conectarBanco;
  end;
end;

end.
