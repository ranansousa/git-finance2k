unit uFrameTipoAcrescimo;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  uDMOrganizacao, uTipoAcrescimoModel,  uTipoAcrescimoDAO, udmConexao, uUtil,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls;

type
  TframeTipoAcrescimo = class(TFrame)
    qry1: TFDQuery;
    cbbcombo: TComboBox;
  private
    { Private declarations }
    pIdOrganizacao : string;
    comboItemIndex :Integer;
    FsListaId : TStringList;


  public
    { Public declarations }
 function obterTodos      (pIdOrganizacao: string; var combo: TComboBox;   var listaID: TStringList): boolean;
 function getComboItemIndex :Integer;
 function getComboID :string;
// function preencheDBGrid(pIDOrganizacao :string; var dBGrid: TDBGrid ) :TFDQuery;
function preencheDBGrid(pIDOrganizacao :string ) :TFDQuery;



  end;

implementation

function TframeTipoAcrescimo.obterTodos(pIdOrganizacao: string; var combo: TComboBox; var listaID: TStringList): boolean;
var
 qryObterTodos : TFDQuery;
 cmdSql :string;
begin

dmConexao.conectarBanco;
if uutil.Empty(pIdOrganizacao) then begin pIdOrganizacao := TOrgAtual.getId; end;

 cmdSql := 'SELECT C.ID_TIPO_CEDENTE AS ID, C.DESCRICAO FROM TIPO_CEDENTE C WHERE (C.ID_ORGANIZACAO = :PIDORGANIZACAO) ORDER BY C.DESCRICAO' ;

  FsListaId := TStringList.Create;
  FsListaId.Clear;
  FsListaId.Add('Sem ID');



  listaID := TStringList.Create;
  listaID.Clear;
  listaID.Add('Sem ID');

  combo.Clear;
  combo.Items.Add('<<< Selecione um Cedente  >>>');

  qryObterTodos := TFDQuery.Create(Self);
  qryObterTodos.Close;
  qryObterTodos.SQL.Clear;
  qryObterTodos.SQL.Add(cmdSql);
  qryObterTodos.Connection := dmConexao.conn;
  qryObterTodos.ParamByName('PIDORGANIZACAO').AsString := pIdOrganizacao;
  qryObterTodos.Open;
  qryObterTodos.Last;

   if not qryObterTodos.IsEmpty then begin
          qryObterTodos.First;

      while not qryObterTodos.Eof do
        begin
          combo.Items.Add(qryObterTodos.FieldByName('DESCRICAO').AsString);
          FsListaId.Add(qryObterTodos.FieldByName('ID').AsString);
          qryObterTodos.Next;
        end;
      qryObterTodos.Close;
      listaID := FsListaId;
      combo.ItemIndex := 0;

   end;

end;




function TframeTipoAcrescimo.getComboID: string;
var idCombo :string;
begin

 if cbbcombo.ItemIndex > 0 then begin

    idCombo := FsListaId[getComboItemIndex];

 end;

 Result := idCombo;

end;



{$R *.dfm}

end.
