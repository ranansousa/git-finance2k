unit uDMTesourariaCreditoConsulta;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TdmTCConsulta = class(TDataModule)
    qryObterPorTituloReceberBaixa: TFDQuery;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dmTCConsulta: TdmTCConsulta;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}


function TdmTCConsulta.obterPorTRB(pIdOrganizacao,pIdTRB: String): Boolean;
begin
  Result := false;

  inicializarDM(Self);

  if not qryObterPorTit.Connection.Connected then
  begin
    qryObterPorTituloPagarBaixa.Connection := dmConexao.Conn;
  end;

  qryObterPorTituloPagarBaixa.Close;

  qryObterPorTituloPagarBaixa.ParamByName('PIDORGANIZACAO').AsString :=pIdOrganizacao;
  qryObterPorTituloPagarBaixa.ParamByName('PIDTITULOPAGARBAIXA').AsString :=pIdTituloPabarBaixa;
  qryObterPorTituloPagarBaixa.Open;



  Result := not qryObterPorTituloPagarBaixa.IsEmpty;

end;

procedure TdmTCConsulta.inicializarDM(Sender: TObject);
begin
  if not(Assigned(dmConexao)) then
  begin
    dmConexao := TdmConexao.Create(Self);
  end
  else
  begin
    dmConexao.conectarBanco;
  end;

end;


end.
