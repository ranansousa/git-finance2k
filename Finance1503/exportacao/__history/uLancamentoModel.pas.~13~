unit uLancamentoModel;

//classe que implementa o objeto lancamento. tabela CLANCAMENTOS (MEGA)
// o DM importarMega vai receber uma lista desses objetos e persistir no SGBD

interface

uses
  Windows, Messages, Classes, SysUtils;

type
  TLancamentoModel = class(TObject)
  private
    FDdgContaDebito: string;
    FHistorico: string;
    FCcodReduzDeb: Integer;
    FIdEmpresa: Integer;
    FFilial: Integer;
    FCcontaDebito: string;
    FCodReduzCre: Integer;
    FValor: Currency;
    FDdataLanc: TDateTime;
    FDgCodigoReduzDeb: string;
    FFlag: string;
    FIdLancamento: Integer;
    FDgContaCredito: string;
    FCentroCusto: Integer;
    FDgCodigoReduzCre: string;
    FAno: string;
    FContaCredito: string;
    FLote: Integer;
    FLinha: Integer;
    FExecTrg: string;
    FCodHistorico: Integer;
    FTipo: string;
    FData: TDateTime;
    FCcomplemento: string;
  public
    procedure SetAno(const Value: string);
    procedure SetCcodReduzDeb(const Value: Integer);
    procedure SetCcomplemento(const Value: string);
    procedure SetCcontaDebito(const Value: string);
    procedure SetCentroCusto(const Value: Integer);
    procedure SetCodHistorico(const Value: Integer);
    procedure SetCodReduzCre(const Value: Integer);
    procedure SetContaCredito(const Value: string);
    procedure SetData(const Value: TDateTime);
    procedure SetDdataLanc(const Value: TDateTime);
    procedure SetDdgContaDebito(const Value: string);
    procedure SetDgCodigoReduzCre(const Value: string);
    procedure SetDgCodigoReduzDeb(const Value: string);
    procedure SetDgContaCredito(const Value: string);
    procedure SetExecTrg(const Value: string);
    procedure SetFilial(const Value: Integer);
    procedure SetFlag(const Value: string);
    procedure SetHistorico(const Value: string);
    procedure SetIdEmpresa(const Value: Integer);
    procedure SetIdLancamento(const Value: Integer);
    procedure SetLinha(const Value: Integer);
    procedure SetLote(const Value: Integer);
    procedure SetTipo(const Value: string);
    procedure SetValor(const Value: Currency);


    property Historico: string read FHistorico write SetHistorico;
    property DdgContaDebito: string read FDdgContaDebito write SetDdgContaDebito;
    property CcodReduzDeb: Integer read FCcodReduzDeb write SetCcodReduzDeb;
    property CcontaDebito: string read FCcontaDebito write SetCcontaDebito;
    property Filial: Integer read FFilial write SetFilial;
    property IdEmpresa: Integer read FIdEmpresa write SetIdEmpresa;
    property DgCodigoReduzDeb: string read FDgCodigoReduzDeb write SetDgCodigoReduzDeb;
    property DdataLanc: TDateTime read FDdataLanc write SetDdataLanc;
    property Valor: Currency read FValor write SetValor;
    property CodReduzCre: Integer read FCodReduzCre write SetCodReduzCre;
    property IdLancamento: Integer read FIdLancamento write SetIdLancamento;
    property DgContaCredito: string read FDgContaCredito write SetDgContaCredito;
    property DgCodigoReduzCre: string read FDgCodigoReduzCre write SetDgCodigoReduzCre;
    property CentroCusto: Integer read FCentroCusto write SetCentroCusto;
    property Ano: string read FAno write SetAno;
    property Flag: string read FFlag write SetFlag;
    property ContaCredito: string read FContaCredito write SetContaCredito;
    property Lote: Integer read FLote write SetLote;
    property ExecTrg: string read FExecTrg write SetExecTrg;
    property Linha: Integer read FLinha write SetLinha;
    property CodHistorico: Integer read FCodHistorico write SetCodHistorico;
    property Tipo: string read FTipo write SetTipo;
    property Ccomplemento: string read FCcomplemento write SetCcomplemento;
    property Data: TDateTime read FData write SetData;

    destructor Destroy; override;

  end;

implementation


{ TLancamentoModel }

destructor TLancamentoModel.Destroy;
begin

  inherited;
end;

procedure TLancamentoModel.SetAno(const Value: string);
begin
  FAno := Value;
end;

procedure TLancamentoModel.SetCcodReduzDeb(const Value: Integer);
begin
  FCcodReduzDeb := Value;
end;

procedure TLancamentoModel.SetCcomplemento(const Value: string);
begin
  FCcomplemento := Value;
end;

procedure TLancamentoModel.SetCcontaDebito(const Value: string);
begin
  FCcontaDebito := Value;
end;

procedure TLancamentoModel.SetCentroCusto(const Value: Integer);
begin
  FCentroCusto := Value;
end;

procedure TLancamentoModel.SetCodHistorico(const Value: Integer);
begin
  FCodHistorico := Value;
end;

procedure TLancamentoModel.SetCodReduzCre(const Value: Integer);
begin
  FCodReduzCre := Value;
end;

procedure TLancamentoModel.SetContaCredito(const Value: string);
begin
  FContaCredito := Value;
end;

procedure TLancamentoModel.SetData(const Value: TDateTime);
begin
  FData := Value;
end;

procedure TLancamentoModel.SetDdataLanc(const Value: TDateTime);
begin
  FDdataLanc := Value;
end;

procedure TLancamentoModel.SetDdgContaDebito(const Value: string);
begin
  FDdgContaDebito := Value;
end;

procedure TLancamentoModel.SetDgCodigoReduzCre(const Value: string);
begin
  FDgCodigoReduzCre := Value;
end;

procedure TLancamentoModel.SetDgCodigoReduzDeb(const Value: string);
begin
  FDgCodigoReduzDeb := Value;
end;

procedure TLancamentoModel.SetDgContaCredito(const Value: string);
begin
  FDgContaCredito := Value;
end;

procedure TLancamentoModel.SetExecTrg(const Value: string);
begin
  FExecTrg := Value;
end;

procedure TLancamentoModel.SetFilial(const Value: Integer);
begin
  FFilial := Value;
end;

procedure TLancamentoModel.SetFlag(const Value: string);
begin
  FFlag := Value;
end;

procedure TLancamentoModel.SetHistorico(const Value: string);
begin
  FHistorico := Value;
end;

procedure TLancamentoModel.SetIdEmpresa(const Value: Integer);
begin
  FIdEmpresa := Value;
end;

procedure TLancamentoModel.SetIdLancamento(const Value: Integer);
begin
  FIdLancamento := Value;
end;

procedure TLancamentoModel.SetLinha(const Value: Integer);
begin
  FLinha := Value;
end;

procedure TLancamentoModel.SetLote(const Value: Integer);
begin
  FLote := Value;
end;

procedure TLancamentoModel.SetTipo(const Value: string);
begin
  FTipo := Value;
end;

procedure TLancamentoModel.SetValor(const Value: Currency);
begin
  FValor := Value;
end;

end.


